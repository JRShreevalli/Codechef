Problem Statement : 
                  Chef is playing Need For Speed. 
                  Currently, his car is running on a straight road with a velocity U metres per second and approaching a 90∘ turn 
                  which is S metres away from him. To successfully cross the turn, velocity of the car when entering the turn must
                  not exceed V metres per second.
                 The brakes of Chef's car allow him to slow down with a deceleration (negative acceleration) 
                 not exceeding A metres per squared second. Tell him whether he can cross the turn successfully.
                 The velocity v when entering the turn can be determined from Newton's 2nd law to be v2=U2+2⋅a⋅S if the car is moving 
                 with a uniform acceleration a.
                 
 Problem Code: NFS
 
 
 // SOLUTION 
 
 #include <iostream>
#include <cmath>
#include <bits/stdc++.h>

using namespace std;

int main() 
{
	int t , u , v , a , s ;
	cin >> t ;
	while( t-- )
	{
	    cin >> u >> v >> a >> s ;
	    float res = ( pow( u , 2 ) - (2 * a * s ) ) ;
	    
	    if( res <= v*v )  
	        cout << "Yes\n" ; 
	    else
	        cout << "No\n" ;
	}
	return 0;
}
